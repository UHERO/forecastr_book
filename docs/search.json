[{"path":"index.html","id":"about","chapter":"1 About","heading":"1 About","text":"document describes setup components forecastr project. focus project forecasting using multi-equation behavioral models. project encompasses data preparation, model selection (work progress), external forecast generation, local forecast generation (planned), simulations (planned), forecast distribution granular scale.","code":""},{"path":"index.html","id":"contents","chapter":"1 About","heading":"1.1 Contents","text":"Chapters 2-3 discuss general setup collaborative project version control. Chapter 4 deals setup file configures general aspects forecastr project. Chapter 5 describes user defined helper functions forecastr project. Chapter 6 gives examples best practices time series manipulation.","code":""},{"path":"project-setup.html","id":"project-setup","chapter":"2 Project setup","heading":"2 Project setup","text":"project self-contained folder (project folder).","code":""},{"path":"project-setup.html","id":"a-quick-overview","chapter":"2 Project setup","heading":"2.1 A quick overview:","text":"TL;DR:https://kdestasio.github.io/post/r_best_practices/","code":""},{"path":"project-setup.html","id":"basic-ideas-for-a-reproducible-workflow","chapter":"2 Project setup","heading":"2.2 Basic ideas for a reproducible workflow","text":"Set work projects:https://r4ds.hadley.nz/workflow-projects.htmlRead section WTF:https://rstats.wtf/save-source.htmlA good list consideration structuring projects:https://www.r-bloggers.com/2018/08/structuring-r-projects/Use RStudio projects sub-directories\n- R - R code.\n- data/raw - data external project.\n- data/processed - intermediate processed data.\n- notes - Rmd, Rmd output, notes, papers, supporting documents, Rmd, etc.\n- output - reports, tables, etc.\n- output/plots - plots.\n- renv - used library management (don’t edit).\n- man - help files (don’t edit).Coding Conventions RFollow tidyverse style guide:https://style.tidyverse.org/index.htmlAdd 4 dashes section header show outline:Package management renv:https://rstudio.github.io/renv/articles/renv.htmlCollaborating renv:https://rstudio.github.io/renv/articles/collaborating.html","code":"# *************************\n#  setup ----\n# *************************"},{"path":"project-setup.html","id":"produce-output-via-r-markdown","chapter":"2 Project setup","heading":"2.3 Produce output via R Markdown","text":"Preference settings:https://bookdown.org/yihui/rmarkdown-cookbook/working-directory.htmlRender results R scripts via Rmd:\n1) source R code within Rmdhttps://bookdown.org/yihui/rmarkdown-cookbook/source-script.html\n1*) save output R script load Rmd setup chunk\n2) render important results Rmd chunks","code":""},{"path":"project-setup.html","id":"dealing-with-credentials","chapter":"2 Project setup","heading":"2.4 Dealing with credentials","text":"Store credentials sensitive info project specific .Renviron file (project’s root directory, must end ):Retrieve credentials demand.\nstore/assign retrieved credentials variable:req <- httr::GET(url, httr::add_headers(Authorization = paste(\"Bearer\", Sys.getenv(\"udaman_token\"))))","code":"udaman_token = \"<your udaman token>\"\nudaman_user = \"<your user name>\"\nudaman_pwd = \"<your password>\"\nGITHUB_PAT = \"<your github pat>\""},{"path":"project-setup.html","id":"additonal-resources","chapter":"2 Project setup","heading":"2.5 Additonal resources:","text":"Look targets package workflow automation:https://docs.ropensci.org/targets/index.html","code":""},{"path":"git.html","id":"git","chapter":"3 Git","heading":"3 Git","text":"Set version control project.","code":""},{"path":"git.html","id":"a-quick-overview-1","chapter":"3 Git","heading":"3.1 A quick overview:","text":"TL;DR:\nhttps://github.com/llendway/github_for_collaboration/blob/master/github_for_collaboration.md","code":""},{"path":"git.html","id":"git-step-by-step","chapter":"3 Git","heading":"3.2 Git step by step","text":"don’t Git, install :https://happygitwithr.com/install-git.htmlMake sure .gitignore contains following files:\n.Renviron\n.RprofileIntroduce Git:\nshell (Terminal tab RStudio):\ngit config –global user.name ‘Jane Doe’\ngit config –global user.email ‘jane@example.com’\ngit config –global –listFor advanced tasks, use GitHub Desktop:https://desktop.github.comStore GitHub PAT (Personal Access Token):https://happygitwithr.com/https-pat.htmlhttps://docs.github.com/en/authentication/keeping--account--data-secure/creating--personal-access-tokenUse one three ways add project GitHub:\nBrand new project:https://happygitwithr.com/new-github-first.html\nExisting project without version control:https://happygitwithr.com/existing-github-first.html\nExisting project local version control:https://happygitwithr.com/existing-github-last.htmlTroubleshooting RStudio can’t detect Git:https://happygitwithr.com/rstudio-see-git.htmlGit vocabulary:https://happygitwithr.com/git-basics.htmlRemote setups (try stick GitHub first discussed ):https://happygitwithr.com/common-remote-setups.htmlUseful Git workflows dealing conflicts:https://happygitwithr.com/workflows-intro.htmlhttps://happygitwithr.com/push-rejected.htmlhttps://happygitwithr.com/pull-tricky.htmlAdditional resources:https://happygitwithr.com/ideas--content.html","code":""},{"path":"git.html","id":"suggested-workflow","chapter":"3 Git","heading":"3.3 Suggested workflow","text":"Initialize repository GitHub.com UHERO account.Clone via RStudio project setup.Commit changes, pull, resolve issues, push.\n3*) work branch (create RStudio), commit branch, (pull) push remote, pull request GitHub.com branch main, merge, delete branch GitHub.com.Research workflow based Github:\nhttps://www.carlboettiger.info/2012/05/06/research-workflow.html","code":""},{"path":"setup-of-the-forecastr-project.html","id":"setup-of-the-forecastr-project","chapter":"4 Setup of the forecastr project","heading":"4 Setup of the forecastr project","text":"setup.R file contains general information used throughout project. contents listed .","code":""},{"path":"setup-of-the-forecastr-project.html","id":"start-with-a-clean-slate","chapter":"4 Setup of the forecastr project","heading":"4.1 Start with a clean slate","text":"First remove objects global environment:rm(list = ls())objects need removed, search via wildcards:rm(list = ls(pattern = glob2rx(\"*__*\")))Detach loaded packages:","code":"if (!is.null(names(sessionInfo()$otherPkgs))) {\ninvisible(\n  suppressMessages(\n    suppressWarnings(\n      lapply(\n        paste(\"package:\", names(sessionInfo()$otherPkgs), sep=\"\"), \n        detach, \n        character.only = TRUE, \n        unload = TRUE\n        )\n      )\n    )\n  )\n}"},{"path":"setup-of-the-forecastr-project.html","id":"packages","chapter":"4 Setup of the forecastr project","heading":"4.2 Packages","text":"setup file clarifies location relative project root loads necessary packages.Navigate within project using () package. Start specifying:::i_am(\"R/setup.R\")load necessary packagesDetect conflicts across packages assign preferencesVerify top level project directoryhere()","code":"library(here) # navigation within the project\nlibrary(conflicted) # detect conflicts across packages\nlibrary(tidyverse) # a set of frequently used data-wrangling tools\nlibrary(magrittr) # more than just pipes\nlibrary(lubridate) # dealing with dates\nlibrary(tsbox) # dealing with time series\n# library(bimets)conflict_scout()\nconflict_prefer(\"filter\", \"dplyr\") # dplyr v stats\nconflict_prefer(\"first\", \"dplyr\") # dplyr v xts\nconflict_prefer(\"lag\", \"dplyr\") # dplyr v stats\nconflict_prefer(\"last\", \"dplyr\") # dplyr v xts\nconflict_prefer(\"extract\", \"magrittr\") # magrittr vs tidyr"},{"path":"setup-of-the-forecastr-project.html","id":"package-descriptions","chapter":"4 Setup of the forecastr project","heading":"4.3 Package descriptions","text":"Use package deal file paths:https://.r-lib.orgSuppose dataset csv format. Use:readr::read_csv(::(\"<subfolder csv file resides>\", \"<CSV file.csv>\"))load essential packages many useful functions (don’t load whole package access single function).\nRefer individual functions loaded packages namespace::function()Resolve conflicts across multiple packages conflicted:https://conflicted.r-lib.orgCore tidyverse packages:https://www.tidyverse.orgNon-core tidyverse packages (need loaded separately):https://magrittr.tidyverse.orghttps://lubridate.tidyverse.orgTime series tools tsbox (learn use , useful). start ts_.https://www.tsbox.helpForecasting multi-equation behavioral models (load bimets actually forecasts, need data manipulation):https://cran.r-project.org/web/packages/bimets/index.htmlbimets depends xts (loaded, can access necessary functions via xts::function()):https://cran.r-project.org/web/packages/xts/index.htmlPrefer using tsbox tidyverse functions whenever possible, understand components behavior xts objects:\nhttps://rc2e.com/timeseriesanalysis","code":""},{"path":"setup-of-the-forecastr-project.html","id":"additional-info-in-setup","chapter":"4 Setup of the forecastr project","heading":"4.4 Additional info in setup","text":"Define project-wide constants:Load user defined utility functions (details next section):source((\"R\", \"util_funs.R\"))","code":"bnk_start <- ymd(\"1900-01-01\")\nbnk_end <- ymd(\"2060-12-31\")"},{"path":"user-defined-utility-functions.html","id":"user-defined-utility-functions","chapter":"5 User defined utility functions","heading":"5 User defined utility functions","text":"Functions available existing packages stored util_funs.R. pdf version document available .","code":""},{"path":"user-defined-utility-functions.html","id":"atoq","chapter":"5 User defined utility functions","heading":"5.1 AtoQ","text":"Description:Usage:Arguments:Value:Examples:","code":" Linear interpolation based on aremos command reference page 292 AtoQ(ser_in, aggr = \"mean\")\n ser_in: the xts series to be interpolated (freq = a)\n\naggr: interpolation method: aggregate via mean (default) or sum interpolated xts series (freq = q) `ncen@us.sola` <- ts(NA, start = 2016, end = 2021, freq = 1) %>% \n   ts_xts()\n `ncen@us.sola`[\"2016/2021\"] <- c(323127513, 325511184, 327891911, 330268840, 332639102, 334998398)\n test1 <- AtoQ(`ncen@us.sola`)\n "},{"path":"user-defined-utility-functions.html","id":"explode_xts","chapter":"5 User defined utility functions","heading":"5.2 explode_xts","text":"Description:Usage:Arguments:Value:Examples:","code":" Splitting of xts matrix to individual xts vectors (don't use,\n pollutes global environment) explode_xts(xts_in)\n  xts_in: the xts matrix to be split into individual xts vectors nothing (silently store split series in global environment) get_series_exp(74, save_loc = NULL) %>%\n   ts_long() %>%\n   ts_xts() %>%\n   explode_xts()\n rm(list = ls(pattern = glob2rx(\"*@HI.Q\")))\n "},{"path":"user-defined-utility-functions.html","id":"find_end","chapter":"5 User defined utility functions","heading":"5.3 find_end","text":"Description:Usage:Arguments:Value:Examples:","code":" Find the date of the last observation (NAs are dropped) find_end(ser_in)\n  ser_in: an xts series date associated with last observation `ncen@us.sola` <- ts(NA, start = 2016, end = 2060, freq = 1) %>% \n   ts_xts()\n `ncen@us.sola`[\"2016/2018\"] <- c(323127513, 325511184, 327891911)\n find_end(`ncen@us.sola`)\n "},{"path":"user-defined-utility-functions.html","id":"find_start","chapter":"5 User defined utility functions","heading":"5.4 find_start","text":"Description:Usage:Arguments:Value:Examples:","code":" Find the date of the first observation (NAs are dropped) find_start(ser_in)\n  ser_in: an xts series date associated with first observation `ncen@us.sola` <- ts(NA, start = 2016, end = 2021, freq = 1) %>% \n   ts_xts()\n `ncen@us.sola`[\"2017/2021\"] <- c(325511184, 327891911, 330268840, 332639102, 334998398)\n find_start(`ncen@us.sola`)\n "},{"path":"user-defined-utility-functions.html","id":"get_series","chapter":"5 User defined utility functions","heading":"5.5 get_series","text":"Description:Usage:Arguments:Value:Examples:","code":" Download a set of series from udaman using series names get_series(ser_id_vec)\n  ser_id_vec: vector of series names time and data for all series combined in a tibble get_series(c(\"VISNS@HI.M\", \"VAPNS@HI.M\"))\n "},{"path":"user-defined-utility-functions.html","id":"get_series1","chapter":"5 User defined utility functions","heading":"5.6 get_series1","text":"Description:Usage:Arguments:Value:Examples:","code":" Download a single series from udaman using series name get_series1(ser_id)\n  ser_id: udaman series name time and data for a single series combined in a tibble get_series(\"VISNS@HI.M\")\n "},{"path":"user-defined-utility-functions.html","id":"get_series_exp","chapter":"5 User defined utility functions","heading":"5.7 get_series_exp","text":"Description:Usage:Arguments:Value:Examples:","code":" Download series listed in an export table from udaman get_series_exp(exp_id, save_loc = \"data/raw\")\n  exp_id: export id\n\n save_loc: location to save the csv of the retrieved data, set to NULL\n      to avoid saving time and data for all series combined in a tibble get_series_exp(74)\n get_series_exp(74, save_loc = NULL)\n "},{"path":"user-defined-utility-functions.html","id":"get_var","chapter":"5 User defined utility functions","heading":"5.8 get_var","text":"Description:Usage:Arguments:Value:Examples:","code":" Construct a series name from variable components and retrieve the\n series get_var(ser_in, env = parent.frame())\n  ser_in: a variable name (string with substituted expressions)\n\n env: environment where the expression should be evaluated variable ser_i <- \"_NF\"\n cnty_i <- \"HI\"\n get_series_exp(74, save_loc = NULL) %>%\n   ts_long() %>%\n   ts_xts() %$% get_var(\"E{ser_i}@{cnty_i}.Q\")\n "},{"path":"user-defined-utility-functions.html","id":"make_xts","chapter":"5 User defined utility functions","heading":"5.9 make_xts","text":"Description:Usage:Arguments:Value:Examples:","code":" Create xts and fill with values make_xts(start = bnk_start, end = bnk_end, per = \"year\", val = NA)\n  start: date of series start (string: \"yyyy-mm-dd\")\n\n end: date of series end (string: \"yyyy-mm-dd\")\n\n per: periodicity of series (string: \"quarter\", \"year\")\n\n val: values to fill in (scalar or vector) an xts series make_xts()\n make_xts(start = ymd(\"2010-01-01\"), per = \"quarter\", val = 0)\n "},{"path":"user-defined-utility-functions.html","id":"p","chapter":"5 User defined utility functions","heading":"5.10 p","text":"Description:Usage:Arguments:Value:Examples:","code":" Concatenate dates to obtain period p(dat1, dat2)\n  dat1: date of period start (string: yyyy-mm-dd)\n\n dat2: date of period end (string: yyyy-mm-dd) string containing date range p(\"2010-01-01\", \"2020-01-01\")\n \n "},{"path":"user-defined-utility-functions.html","id":"pca_to_pc","chapter":"5 User defined utility functions","heading":"5.11 pca_to_pc","text":"Description:Usage:Arguments:Value:Examples:","code":" Convert annualized growth to quarterly growth pca_to_pc(ser_in)\n  ser_in: the series containing annualized growth (in percent) series containing quarterly growth (in percent) `ncen@us.sola` <- ts(NA, start = 2016, end = 2021, freq = 1) %>% \n   ts_xts()\n `ncen@us.sola`[\"2016/2021\"] <- c(323127513, 325511184, 327891911, 330268840, 332639102, 334998398)\n test1 <- AtoQ(`ncen@us.sola`)\n ts_c(test1 %>% ts_pca() %>% pca_to_pc(), test1 %>% ts_pc())"},{"path":"user-defined-utility-functions.html","id":"pchmy","chapter":"5 User defined utility functions","heading":"5.12 pchmy","text":"Description:Usage:Arguments:Value:Examples:","code":" Calculate multi-period average growth pchmy(ser_in, lag_in = 1)\n ser_in: name of xts series for which growth is calculated\n\nlag_in: length of period over which growth is calculated series containing the average growth of ser_in (in percent) `ncen@us.sola` <- ts(NA, start = 2016, end = 2021, freq = 1) %>% \n   ts_xts()\n `ncen@us.sola`[\"2016/2021\"] <- c(323127513, 325511184, 327891911, 330268840, 332639102, 334998398)\n test1 <- AtoQ(`ncen@us.sola`)\n ts_c(pchmy(`ncen@us.sola`, lag_in = 3), ts_pc(`ncen@us.sola`))\n ts_c(pchmy(test1, lag_in = 4), ts_pcy(test1), ts_pca(test1), ts_pc(test1))\n "},{"path":"user-defined-utility-functions.html","id":"plot_1","chapter":"5 User defined utility functions","heading":"5.13 plot_1","text":"Description:Usage:Arguments:Value:Examples:","code":" Interactive plot of a single variable with level and growth rate plot_1(\n   ser,\n   rng_start = as.character(Sys.Date() - years(15)),\n   height = 300,\n   width = 900\n )\n  ser: time series to plot\n\n rng_start: start of zoom range (\"YYYY-MM-DD\")\n\n height: height of a single panel (px)\n\n width: width of a single panel (px) a dygraph plot `ncen@us.sola` <- ts(NA, start = 2016, end = 2021, freq = 1) %>% \n   ts_xts()\n `ncen@us.sola`[\"2016/2021\"] <- c(323127513, 325511184, 327891911, 330268840, 332639102, 334998398)\n test1 <- AtoQ(`ncen@us.sola`)\n plot_1(`ncen@us.sola`, rng_start = \"2017-01-01\")\n plot_1(test1, rng_start = \"2017-01-01\")\n "},{"path":"user-defined-utility-functions.html","id":"plot_comp","chapter":"5 User defined utility functions","heading":"5.14 plot_comp","text":"Description:Usage:Arguments:Value:Examples:","code":" Three-panel plot of levels, index, and growth rates plot_comp(\n   sers,\n   rng_start = as.character(Sys.Date() - years(15)),\n   rng_end = as.character(Sys.Date()),\n   height = 300,\n   width = 900\n )\n sers: a vector of series to plot\n\nrng_start: start of the zoom range (\"YYYY-MM-DD\")\n\nrng_end: end of the zoom range (\"YYYY-MM-DD\")\n\nheight: height of a single panel (px)\n\nwidth: width of a single panel (px) a list with three dygraph plots (level, index, growth) `ncen@us.sola` <- ts(NA, start = 2016, end = 2021, freq = 1) %>% \n   ts_xts()\n `ncen@us.sola`[\"2016/2021\"] <- c(323127513, 325511184, 327891911, 330268840, 332639102, 334998398)\n test1 <- AtoQ(`ncen@us.sola`)\n plot_comp(ts_c(`ncen@us.sola`, test1), rng_start = \"2017-01-01\")\n get_series_exp(74, save_loc = NULL) %>%\n   ts_long() %>%\n   ts_xts() %>%\n   extract(, c(\"E_NF@HI.Q\", \"ECT@HI.Q\", \"EMN@HI.Q\")) %>%\n   plot_comp()\n "},{"path":"user-defined-utility-functions.html","id":"plot_comp_2","chapter":"5 User defined utility functions","heading":"5.15 plot_comp_2","text":"Description:Usage:Arguments:Value:Examples:","code":" Two-panel plot of levels, index, and growth rates plot_comp_2(\n   sers,\n   rng_start = as.character(Sys.Date() - years(15)),\n   rng_end = as.character(Sys.Date()),\n   height = 300,\n   width = 900\n )\n sers: a vector of series to plot\n\nrng_start: start of the zoom range (\"YYYY-MM-DD\")\n\nrng_end: end of the zoom range (\"YYYY-MM-DD\")\n\nheight: height of a single panel (px)\n\nwidth: width of a single panel (px) a list with two dygraph plots (level, index, growth) `ncen@us.sola` <- ts(NA, start = 2016, end = 2021, freq = 1) %>% \n   ts_xts()\n `ncen@us.sola`[\"2016/2021\"] <- c(323127513, 325511184, 327891911, 330268840, 332639102, 334998398)\n test1 <- AtoQ(`ncen@us.sola`)\n plot_comp_2(ts_c(`ncen@us.sola`, test1), rng_start = \"2017-01-01\")\n get_series_exp(74, save_loc = NULL) %>%\n   ts_long() %>%\n   ts_xts() %>%\n   extract(, c(\"E_NF@HI.Q\", \"ECT@HI.Q\", \"EMN@HI.Q\")) %>%\n   plot_comp_2()\n "},{"path":"user-defined-utility-functions.html","id":"qtoa","chapter":"5 User defined utility functions","heading":"5.16 QtoA","text":"Description:Usage:Arguments:Value:Examples:","code":" Conversion from quarterly to annual frequency QtoA(ser_in, aggr = \"mean\")\n  ser_in: the xts series to be converted (freq = q)\n\n aggr: aggregate via mean (default) or sum converted xts series (freq = a) `ncen@us.sola` <- ts(NA, start = 2016, end = 2021, freq = 1) %>% \n   ts_xts()\n `ncen@us.sola`[\"2016/2021\"] <- c(323127513, 325511184, 327891911, 330268840, 332639102, 334998398)\n test1 <- AtoQ(`ncen@us.sola`)\n test2 <- QtoA(test1) # for stock type variables mean, for flow type variables sum\n print(test1)\n print(cbind(`ncen@us.sola`, test2))\n "},{"path":"user-defined-utility-functions.html","id":"qtom","chapter":"5 User defined utility functions","heading":"5.17 QtoM","text":"Description:Usage:Arguments:Value:Examples:","code":" Interpolate a tibble of series from quaterly to monthly freq QtoM(data_q, conv_type)\n  data_q: tibble containing variables at quarterly freq\n\n conv_type: match the quarterly value via \"first\", \"last\", \"sum\",\n      \"average\" tibble containing variables at monthly freq `ncen@us.sola` <- ts(NA, start = 2016, end = 2021, freq = 1) %>% \n   ts_xts()\n `ncen@us.sola`[\"2016/2021\"] <- c(323127513, 325511184, 327891911, 330268840, 332639102, 334998398)\n test1 <- AtoQ(`ncen@us.sola`)\n QtoM(ts_tbl(test1), \"average\")\n ts_frequency(QtoM(ts_tbl(test1), \"average\") %>% ts_xts())\n "},{"path":"user-defined-utility-functions.html","id":"qtom1","chapter":"5 User defined utility functions","heading":"5.18 QtoM1","text":"Description:Usage:Arguments:Value:Examples:","code":" Interpolate a single series from quarterly to monthly freq QtoM1(var_q, ts_start, conv_type)\n  var_q: vector containing a single variable at quarterly freq\n\n ts_start: starting period as c(year, quarter) e.g. c(2001, 1)\n\n conv_type: match the quarterly value via \"first\", \"last\", \"sum\",\n      \"average\" vector containing a single variable at monthly freq QtoM1(test1, c(2010, 1), \"average\")\n "},{"path":"user-defined-utility-functions.html","id":"qtrs","chapter":"5 User defined utility functions","heading":"5.19 qtrs","text":"Description:Usage:Arguments:Value:Examples:","code":" Convert period in quarters to period months qtrs(nr_quarters)\n  nr_quarters: number of quarters in period (integer) number of months in period qtrs(3)\n ymd(\"2020-01-01\") + qtrs(3)\n "},{"path":"best-practices-for-time-series-data-manipulation.html","id":"best-practices-for-time-series-data-manipulation","chapter":"6 Best practices for time series data manipulation","heading":"6 Best practices for time series data manipulation","text":"Use capital letters series names. Special characters variable names require putting name backticks (e.g. N@US.).\nEliminate special characters using long tibble.Use xts format whenever possible. Observations multivariate xts can accessed time series name two ways: mul_var_xts[time, ser_name] mul_var_xts$ser_name[time].Make sure series defined range (default start = bnk_start, end = bnk_end). Take advantage make_xts() (defaults, e.g. start end period).Don’t break multivariate time series (think databank) individual series global environment.referring directly series static name, use bank$series notation (can used right left hand side assignment, bank[, series] can used existing series bank).Use [p()] select period xts objects, otherwise use ts_span().bank[,seriesname] notation works existing xts series left assignment (can also used right). seriesname can determined runtimeAlternatively, make multiple series bank available %$% retrieve inividual series get_var() right.Bimets requires data particular tslist format. Convert xts tslist using ts_tslist().series collected tslist left assignment use bank[[seriesname]] notation (can also used right). lhs series seriesname need exist, might easier work tslist xts variable names determined runtime.","code":"hist_q_mod <- hist_q %>%\n  ts_tbl() %>%\n  mutate(id = str_replace_all(id, c(\"@\" = \"_AT_\", \"\\\\.\" = \"_\")))\n  \n# revert back to udaman notation\nhist_q <- hist_q_mod %>%\n  ts_tbl() %>%\n  mutate(id = str_replace_all(id, c(\"_AT_\" = \"@\", \"_Q\" = \"\\\\.Q\")))import_xts <- read_csv(here(\"data/raw\", str_glue(\"{exp_id_a}.csv\"))) %>%\n  arrange(time) %>%\n  ts_long() %>%\n  ts_xts() %>%\n  ts_c(\n    temp = make_xts(per = \"year\") # temporary variable to force start and end in import_xts\n  ) %>%\n  extract(, str_subset(colnames(.), \"temp\", negate = TRUE)) # remove temp# find the last value in history\ndat_end <- find_end(hist_q$N_AT_US_Q)\n# same as\ndat_end <- find_end(hist_q[, N_AT_US_Q])# extend series with addfactored level\nsol_q$N_AT_US_SOLQ <- hist_q$N_AT_US_Q[p(\"\", dat_end)] %>%\n  ts_bind(sol_q$NCEN_AT_US_SOLQ[p(dat_end, \"\")] +\n    as.numeric(sol_q$N_AT_US_SOLQ_ADDLEV[dat_end]))\n    \n# addfactor for growth\nsol_q$N_AT_US_SOLQ_ADDGRO[p(dat_end + qtrs(1), dat_end + qtrs(4))] <- -0.35\n\n# extend history using growth rate\nsol_q$N_AT_US_SOLQ <- sol_q$N_AT_US_SOLQ[p(\"\", dat_end)] %>%\n  ts_chain(ts_compound(sol_q$N_AT_US_SOLQ_GRO[p(dat_end, \"\")]))# initialize the lhs series in the \"bank\"\nhist_a$temp <- make_xts()\nnames(hist_a)[names(hist_a) == \"temp\"] <- str_glue(\"E{ser_i}_AT_{cnty_i}_ADD\")\n\n# calculate expression and assign to lhs\nhist_a[, str_glue(\"E{ser_i}_AT_{cnty_i}_SH\")] <- \n  (hist_a[, str_glue(\"E{ser_i}_AT_{cnty_i}\")] / hist_a[, str_glue(\"E_NF_AT_{cnty_i}\")])hist_a[, str_glue(\"E{ser_i}_AT_{cnty_i}_SH\")] <- hist_a %$%\n  (get_var(\"E{ser_i}_AT_{cnty_i}\") / get_var(\"E_NF_AT_{cnty_i}\"))# store series as tslist\nhist_a_lst <- hist_a %>% \n  ts_tslist() %>% \n\n# convert series to bimets format\nhist_a_bimets <- hist_a_lst %>%\n  map(as.bimets)\n\n# bimets strips the attributes, need to reset them for further manipulation by tsbox\nhist_a <- hist_a_bimets %>% \n  set_attr(\"class\", c(\"tslist\", \"list\")) %>% \n  ts_xts()# similar to above with a tslist variable\nhist_a_lst[[str_glue(\"E{ser_i}_AT_{cnty_i}_ADD\")]] <- hist_a_lst %$%\n  (get_var(\"E{ser_i}_AT_{cnty_i}\") - get_var(\"E_NF_AT_{cnty_i}\"))"},{"path":"best-practices-for-time-series-data-manipulation.html","id":"harness-the-power-of-tsbox","chapter":"6 Best practices for time series data manipulation","heading":"6.1 Harness the power of tsbox","text":"Use converter functions tsbox shift various data types (ts_tbl(), ts_xts(), ts_ts(), ts_tslist()) reshaping long wide format (ts_long(), ts_wide()). tsbox contains funtions time period selection (ts_span()), merging extension operations (ts_c(), ts_bind(), ts_chain()), transformations (ts_lag(), ts_pc(), ts_pca(), ts_pcy(), ts_diff(), ts_diffy()), index construction (ts_compound(), ts_index()). Consider turning solutions dplyr tidyr.","code":""},{"path":"model-selection.html","id":"model-selection","chapter":"7 Model selection","heading":"7 Model selection","text":"model selection process can run lin--line R script directly (R/gets_model_select.R) via sourcing Rmd document (notes/gets_model_select.Rmd) collects model selection results easier digest html file. Running full script (source) takes 1 minute.","code":""},{"path":"model-selection.html","id":"main-user-settings","chapter":"7 Model selection","heading":"7.1 Main user settings","text":"End period used model selection.End period used estimation (selected model can re-estimated different sample).Start quasi-forecast period (model evaluation).End quasi-forecast period (NULL end history).Response variable.List predictors.","code":""},{"path":"model-selection.html","id":"data-preparation-tidyverse","chapter":"7 Model selection","heading":"7.2 Data preparation (tidyverse)","text":"Download series used model selection process UDAMAN (500 rows 1200 columns) eliminate special characters series names.Log-transform variables.Load (create) indicators (dummies impulse, level shift, seasonal) trend.Combine variables single dataset.Set date range model selection.Generate 8 lags predictors.Filter data set specific variables considered particular model, including trend season dummies.","code":""},{"path":"model-selection.html","id":"model-selection-steps-gets","chapter":"7 Model selection","heading":"7.3 Model selection steps (gets)","text":"Formulate general unrestricted model.Run gets (general specific) model selection algorithm.Identify outliers relationship.Repeat gets model selection specific model outliers.Verify additional outliers arise due greater model parsimony.estimation period shorter model selection period, remove predictors containing zeros (e.g. outlier past end estimation period).Re-estimate final model.Save model equation txt file (plugging estimated coefficients ). happy model, copy equation file containing model equations.","code":""},{"path":"model-selection.html","id":"produce-a-quasi-forecast-with-the-selected-model-bimets","chapter":"7 Model selection","heading":"7.4 Produce a quasi-forecast with the selected model (bimets)","text":"Load model txt file.Load data used model.Estimate model (estimation period ends last data point also run Chow test model stability).Simulate model.Evaluate simulation plotting quasi-forecast actual history.","code":""},{"path":"notes.html","id":"notes","chapter":"8 Notes","heading":"8 Notes","text":"","code":""},{"path":"notes.html","id":"project-setup-1","chapter":"8 Notes","heading":"8.1 Project setup","text":"Coding Conventions R:Basic ideas reproducible workflow:Use RStudio projects sub-directoriesR - R code.data/raw - data external project.data/processed - intermediate processed data.notes - Rmd, Rmd output, notes, papers, supporting documents, Rmd, etc.output - reports, tables, etc.output/plots - plots.renv - used library management (don’t edit).man - help files (don’t edit).Preference settings:","code":""},{"path":"notes.html","id":"git-1","chapter":"8 Notes","heading":"8.2 Git","text":"quick overview:\nhttps://github.com/llendway/github_for_collaboration/blob/master/github_for_collaboration.md","code":""},{"path":"notes.html","id":"git-step-by-step-1","chapter":"8 Notes","heading":"8.3 Git step by step","text":"don’t Git, install :https://happygitwithr.com/install-git.htmlMake sure .gitignore contains following files:\n.Renviron\n.RprofileIntroduce Git:\nshell (Terminal tab RStudio):\ngit config –global user.name ‘Jane Doe’\ngit config –global user.email ‘jane@example.com’\ngit config –global –listFor advanced tasks, use GitHub Desktop:https://desktop.github.comStore GitHub PAT (Personal Access Token):https://happygitwithr.com/https-pat.htmlUse one three ways add project GitHub:\nBrand new project:https://happygitwithr.com/new-github-first.html\nExisting project without version control:https://happygitwithr.com/existing-github-first.html\nExisting project local version control:https://happygitwithr.com/existing-github-last.htmlTroubleshooting RStudio can’t detect Git:https://happygitwithr.com/rstudio-see-git.htmlGit vocabulary:https://happygitwithr.com/git-basics.htmlRemote setups (try stick GitHub first discussed ):https://happygitwithr.com/common-remote-setups.htmlUseful Git workflows dealing conflicts:https://happygitwithr.com/workflows-intro.htmlhttps://happygitwithr.com/push-rejected.htmlhttps://happygitwithr.com/pull-tricky.htmlAdditional resources:https://happygitwithr.com/ideas--content.htmlSuggested workflow:\n1) Initialize repository GitHub.com UHERO account.\n2) Clone via RStudio project setup.\n3) Commit changes, pull, resolve issues, push.\n3*) work branch (create RStudio), commit branch, (pull) push remote, pull request GitHub.com branch main, merge, delete branch GitHub.com.Render results R scripts via Rmd:\n1) source R code within Rmd\n2) render important results Rmd chunksUse () package write file pathsSuppose dataset csv format. Use readr::read_csv(::(“subfolder csv file resides,” “CSV file.csv”))use setwd() rm(list = ls())save workspace .Rdta fileUse library() require()Use version control (useful recording changes different versions file time - see Git integration)See resources :Best Practices & Style Guide Writing R Code: https://github.com/kmishra9/Best-Practices--Writing-R-CodeR Code – Best practices: https://www.r-bloggers.com/2018/09/r-code-best-practices/R Best Practices Krista L. DeStasio: https://kdestasio.github.io/post/r_best_practices/Project-oriented workflow: https://www.tidyverse.org/blog/2017/12/workflow-vs-script/R coding style best practices: https://www.datanovia.com/en/blog/r-coding-style-best-practices/Forgot Teach R Jennifer Bryan Jim Hester: https://rstats.wtf/save-source.htmlConflicted: new approach resolving ambiguity: https://www.tidyverse.org/blog/2018/06/conflicted/Introduction renv package: https://rstudio.github.io/renv/articles/renv.html#future-work-1Row-oriented workflows R tidyverse: https://github.com/jennybc/row-oriented-workflows#readmeStructuring R projects: https://www.r-bloggers.com/2018/08/structuring-r-projects/Defensive Programming R: https://bitsandbugs.io/2018/07/27/defensive-programming--r/#8Nice R code: https://nicercode.github.io/blog/2013-04-05-projects/Workflow basics: https://r4ds..co.nz/workflow-basics.htmlNamespace package: https://r-pkgs.org/namespace.htmlWriting R packages RStudio: https://ourcodingclub.github.io/tutorials/writing-r-package/dangerous change state: https://withr.r-lib.org/articles/changing--restoring-state.htmlThe targets R Package User Manual: https://books.ropensci.org/targets/Github R:Install git R system : https://git-scm.com/downloadsGo RStudio → Global Options → Git/SVN → Make sure box “Enable version control interface RStudio projects” checkedTell RStudio Git executable Git/SVN Global OptionsCreate new project R (make sure check box “Create git repository” checked)Create new task file R (New File → Rscript) save .R fileTo use Git version control .R file need commit fileTo commit file Git RStudio go Git tab top right pane R → Select one files checking boxChecking box means ready committedTo actually commit file click “Commit” button (open commit window)Include commit message click second “Commit” buttonFor collaboration Github:Load usethis package type ?use_github R consoleIn Authentication section, click GitHub personal access token (PAT)Click button generate new tokenPut Note use repo permission token click “Generate token”Copy token ID number (needs stored)Type edit_r_environ() R console type GITHUB_PAT =‘copy paste token ID number ’R console type use_github(protocol =‘https,’ auth_token = Sys.getenv(“GITHUB_PAT”))Run ask sure. Select 3This create Github repository set syncingAnother way collaborate Github (easier follow !):Go http://github.com create accountCreate new repository give name (click “Add README file)Go R → Install usethis package include library(usethis) → Type use_git_config(user.name = “Name GitHub account,” user.email = “email address GitHub account”)newly created repository, click “Code” button GitHub. Copy URL “Clone HTTPS”Go R → New Project → Version Control → Git → Repository URL (copy paste HTTP URL Github repository) - connect ’s cloud Github computer (also called cloning repository)Can start new R script able see Git tab RCan commit include commit message (add files depository)Need push fully make changes go show GitHub accountUnder History tab able see changes made committedCan link SSH keys settings account R Git/SVN tab (create SSH RSA key created already)merge conflict collaborating making simultaneous changes together pull first fix merge conflict. can commit finalizing changes keep eliminating “====” “>>>>” push . person pull changes hand.Creating new branch allow things . Click branch button create new branch name . new branch allow make changes work separately . person pull see new branch changes . way, can work independently working together time. merge independent branches.Open pull request clicking Compare pull request button Github site merge separate branches together. Can delete separate branch desired. go R pull changes ..Renviron use specific user credentials user name, password, Github udaman tokens..Rprofile can ignored gitignore problem different paths across Macs PCs.Resources:Happy Git GitHub useR: https://happygitwithr.com/Github collaboration: https://github.com/llendway/github_for_collaboration/blob/master/github_for_collaboration.mdMy research workflow, based Github: https://www.carlboettiger.info/2012/05/06/research-workflow.htmlCollaborating renv: https://rstudio.github.io/renv/articles/collaborating.htmlR style guide: http://adv-r..co.nz/Style.htmlUHERO R style guide:Use block letters R file names (NAS file server case sensitive)Comment codeTime Series Modeling:Forecasting: Principles Practice (3rd ed) Rob J Hyndman George Athanasopoulos : https://otexts.com/fpp3/index.htmlAn Introduction Statistical Learning (1st ed): https://www.statlearning.comManipulating Time Series Data R xts & zoo: https://rstudio-pubs-static.s3.amazonaws.com/288218_117e183e74964557a5da4fc5902fc671.html https://rpubs.com/mpfoley73/504487 Time Series R, Power xts zoo: https://ugoproto.github.io/ugo_r_doc/time_series_in_r_the_power_of_xts_and_zoo/ xts Cheat Sheet: Time Series R: https://www.r-bloggers.com/2017/05/xts-cheat-sheet-time-series--r/R Data Science Cheat Sheet DataCamp: https://s3.amazonaws.com/assets.datacamp.com/blog_assets/xts_Cheat_Sheet_R.pdfEvaluate R packages: gets, ARDL, etc.gets package used Multi-path General--Specific (GETS) modelling mean /variance regression, Indicator Saturation (ISAT) methods detecting structural breaks mean.https://cran.r-project.org/web/packages/gets/index.htmlThe ARDL package creates complex autoregressive distributed lag (ARDL) models providing just order automatically constructs underlying unrestricted restricted error correction model (ECM). also performs bounds-test cointegration described Pesaran et al. (2001). https://cran.r-project.org/web/packages/ARDL/index.html https://github.com/Natsiopoulos/ARDLTidy tools time series modeling tidyverts: https://tidyverts.org - fable package applies tidyverse principles time series modeling used forecasting: https://fable.tidyverts.org/ - tsibble package provides tidy data structure time series: https://cran.r-project.org/web/packages/tsibble/index.html - tsibbledata package provide different types datasets tsibble data structure: https://cran.r-project.org/web/packages/tsibbledata/index.html - tsibbletalk package introduces shared key tsibble, easily {crosstalk} plots client server sides (.e. without shiny): https://cran.r-project.org/web/packages/tsibbletalk/tsibbletalk.pdf- feasts package provides collection features, decomposition methods, statistical summaries graphics functions analysing tidy time series data: https://cran.r-project.org/web/packages/feasts/index.html - fable.prohphet package provides interface allowing prophet forecasting procedure used within fable framework: https://cran.r-project.org/web/packages/fable.prophet/vignettes/intro.htmlThe xts Extensible Time Series package provides extensible time series class, enabling uniform handling many R time series classes : https://cran.r-project.org/web/packages/xts/index.html xts: Extensible Time Series: https://cran.r-project.org/web/packages/xts/vignettes/xts.pdfThink dummies, breaks, outliersFigure bimets deals ragged edge, add-factors, goal searchThe bimets R package developed aim easing time series analysis building framework facilitates definition, estimation simulation simultaneous equation models: https://cran.r-project.org/web/packages/bimets/index.htmlbimets - Time Series Econometric Modeling R: https://github.com/cran/bimets https://cran.r-project.org/web/packages/bimets/vignettes/bimets.pdfStructural Equation Models (SEM): https://rviews.rstudio.com/2021/01/22/sem-time-series-modeling/Look tidy modelsThe tidymodels package collection packages modeling machine learning using tidyverse principles: https://www.tidymodels.orgPort Gekko code R: http://t-t.dk/gekko/Look DiagrammeR package, also Gantt charts can producehttps://rich-iannone.github.io/DiagrammeR/Beginner’s Guide Learning R:() short introduction R: https://cran.r-project.org/doc/contrib/Torfs+Brauer-Short-R-Intro.pdfRstudio Education: https://github.com/rstudio-educationRemaster tidyverse: https://github.com/rstudio-education/remaster--tidyverseIntroduction R Rstudio: https://jules32.github.io/2016-07-12-Oxford/R_RStudio/intro R new programmers: https://rforcats.netfasteR: Fast Lane Learning R!: https://github.com/matloff/fasteRRStudio Cheatsheets: https://rstudio.com/resources/cheatsheets/R Data Science: https://r4ds..co.nzData wrangling, exploration, analysis R: https://stat545.comR Markdown: Definitive Guide: https://bookdown.org/yihui/rmarkdown/Data Visualization R: https://rkabacoff.github.io/datavis/Modern R tidyverse: https://b-rodrigues.github.io/modern_R/R Cookbook, 2nd Edition: https://rc2e.comAdvanced R Hadley Wickham: http://adv-r..co.nzUC Business Analytics R Programming Guide: http://uc-r.github.io/descriptiveR Programming Data Science: https://bookdown.org/rdpeng/rprogdatascience/Hands-Programming R: https://rstudio-education.github.io/hopr/Efficient R programming: https://csgillespie.github.io/efficientR/index.htmlR Fledglings: http://www.uvm.edu/~tdonovan/RforFledglings/index.htmlR Intermediate Level (includes applications):Advanced Statistical Computing: https://bookdown.org/rdpeng/advstatcomp/Feature Engineering Selection: Practical Approach Predictive Models: http://www.feat.engineering/index.htmlAdvanced Quantitative Methods: https://uclspp.github.io/PUBLG088/index.htmlPrinciples Econometrics R: https://bookdown.org/ccolonescu/RPoE4/Modern Data Analysis Economics: https://jiamingmao.github.io/data-analysis/Resources/Data Science Economists: https://github.com/uo-ec607/lecturesData Science Psychologists: https://bookdown.org/hneth/ds4psy/10-time.htmlRewriting R code C++: https://adv-r.hadley.nz/rcpp.htmlWriting R Extensions: https://cran.rstudio.com/doc/manuals/r-devel/R-exts.htmlOther R packages data analysis:data.table package used fast aggregation large data (e.g. 100GB RAM), fast ordered joins, fast add/modify/delete columns group using copies , list columns, friendly fast character- separated-value read/write: https://cran.r-project.org/web/packages/data.table/mlr3 (Lang et al. 2019) package ecosystem provide generic, object-oriented, extensible framework classification, regression, survival analysis, machine learning tasks R: https://mlr3book.mlr-org.compurr package tutorial: https://jennybc.github.io/purrr-tutorial/Data Visualization R:Data Analysis Visualization Using R: http://varianceexplained.org/RData/Data Analysis Visualization R Ecologists: https://datacarpentry.org/R-ecology-lesson/Data Visualization R Rob Kabacoff: https://rkabacoff.github.io/datavis/R Graphics Cookbook, 2nd edition: https://r-graphics.orgggplot2: elegant graphics data analysis: https://ggplot2-book.org","code":""}]
